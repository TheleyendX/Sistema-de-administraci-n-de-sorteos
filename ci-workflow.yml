name: Java CI with Maven

on:
  push:
    branches: [ "pruebas" ]
  pull_request:
    branches: [ "pruebas" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B verify --file pom.xml

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      - uses: actions/upload-artifact@v3
        with:
          name: target
          path: target

  push-to-oci:
    name: Push to OCI
    needs: build
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - uses: actions/download-artifact@v3
        with:
          name: target
          path: target
      - name: Build OCI container
        run: mvn -B k8s:build k8s:resource
      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.1
        id: get-ocir-repository
        with:
          name: microjakarta10
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}
      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.1
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}
      - name: Push to Oracle Cloud
        run: mvn -B k8s:push
      - uses: actions/upload-artifact@v3
        with:
          name: k8splan
          path: target/classes/META-INF/jkube/kubernetes.yml

  deploy-to-oci:
    name: Deploy to OCI
    needs: push-to-oci
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: k8splan
          path: target/classes/META-INF/jkube/kubernetes.yml
      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.3.1
        id: test-configure-kubectl-oke-action
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}
      - name: Deploy to OKE
        run: kubectl apply -f target/classes/META-INF/jkube/kubernetes.yml
